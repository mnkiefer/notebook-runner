name: "Notebook Runner"
description: "Runs and tests Notebooks with VS Code"
branding:
  icon: "book"
  color: "blue"

inputs:
  notebook-files:
    description: "Notebooks to be tested, separated by spaces"
    required: true
  notebook-file-ext:
    description: "Notebook file extension"
    required: false
    default: 'ipynb'
  notebook-vscode-ext:
    description: "Notebook VS Code extension"
    required: false
    default: 'ms-toolsai.jupyter'
  vscode-version:
    description: "VS Code version"
    required: false
    default: 'stable'
  timeout:
    description: "Mocha timeout for VS Code tests"
    require: false
    default: 120000
  artifacts-on-success:
    description: "Whether to create artifacts on success"
    required: false
    default: false
  artifacts-kind:
    description: "Kind of artifacts to be created"
    required: false
    default: 'file'

runs:
  using: "composite"
  steps:
    - name: Checkout Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Setup VS Code Tests
      shell: bash
      run: |
        echo "TIMEOUT=${{ inputs.timeout }}" >> $GITHUB_ENV
        echo "NOTEBOOK_VSCODE_EXT=${{ inputs.notebook-vscode-ext }}" >> $GITHUB_ENV
        echo "NOTEBOOK_FILE_EXT=${{ inputs.notebook-file-ext }}" >> $GITHUB_ENV
        echo "ARTIFACTS_KIND=${{ inputs.artifacts-kind }}" >> $GITHUB_ENV

        # Without self-hosted container, use ${{ github.action_path }} instead
        cp -r ${GITHUB_ACTION_PATH}/vscode-notebook-runner .

        cd vscode-notebook-runner
        npm i -g @sap/cds-dk  --quiet --no-progress
        npm i  --quiet --no-progress

        mkdir -p test/data
        for file in ${{ inputs.notebook-files }}; do
          cp ../$file test/data
        done

    - name: Run all Notebooks
      shell: bash
      run: |
        cd vscode-notebook-runner
        npm i
        xvfb-run --auto-servernum npm run vscode
        
    - name: Create artifacts
      if: failure() || ${{ inputs.artifacts-on-success }}
      shell: bash
      run: |
        tar -czf notebooks.tgz -C vscode-notebook-runner/test/data/out/ .

    - name: Upload artifacts
      id: artifact-upload-step
      if: failure() || ${{ inputs.artifacts-on-success }}
      uses: actions/upload-artifact@v3
      with:
        name: notebooks
        path: notebooks.tgz

    - name: Create comment for failed notebooks
      if: failure()
      shell: bash
      run: |
        cd vscode-notebook-runner/test/data/out
        echo "MULTI_LINE_COMMENT<<EOF" >> $GITHUB_ENV
        echo "$(cat comment.md)" >> $GITHUB_ENV
        
        # Note: Can add artifact url once actions/upload-artifact@v4 supports GHES
        # echo "${{ steps.artifact-upload-step.outputs.artifact-url }}" >> $GITHUB_ENV
        
        echo "EOF" >> $GITHUB_ENV

    - name: Commment on failed notebooks in PR
      if: failure()
      uses: mshick/add-pr-comment@v2
      with:
        message: ${{ env.MULTI_LINE_COMMENT }}
